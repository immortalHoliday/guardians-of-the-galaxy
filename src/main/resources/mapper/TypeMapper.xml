<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.web02.dao.TypeMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.web02.entity.Type" >
    <id column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="typename" property="typename" jdbcType="VARCHAR" />
    <result column="backup1" property="backup1" jdbcType="VARCHAR" />
    <result column="backup2" property="backup2" jdbcType="INTEGER" />
    <result column="backup3" property="backup3" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    typeid, typename, backup1, backup2, backup3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.web02.entity.TypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from type
    where typeid = #{typeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from type
    where typeid = #{typeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.web02.entity.TypeExample" >
    delete from type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.web02.entity.Type" >
    insert into type (typeid, typename, backup1, 
      backup2, backup3)
    values (#{typeid,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR}, #{backup1,jdbcType=VARCHAR}, 
      #{backup2,jdbcType=INTEGER}, #{backup3,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.web02.entity.Type" >
    insert into type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="typename != null" >
        typename,
      </if>
      <if test="backup1 != null" >
        backup1,
      </if>
      <if test="backup2 != null" >
        backup2,
      </if>
      <if test="backup3 != null" >
        backup3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="typename != null" >
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="backup1 != null" >
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null" >
        #{backup2,jdbcType=INTEGER},
      </if>
      <if test="backup3 != null" >
        #{backup3,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.web02.entity.TypeExample" resultType="java.lang.Integer" >
    select count(*) from type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update type
    <set >
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.typename != null" >
        typename = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.backup1 != null" >
        backup1 = #{record.backup1,jdbcType=VARCHAR},
      </if>
      <if test="record.backup2 != null" >
        backup2 = #{record.backup2,jdbcType=INTEGER},
      </if>
      <if test="record.backup3 != null" >
        backup3 = #{record.backup3,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update type
    set typeid = #{record.typeid,jdbcType=INTEGER},
      typename = #{record.typename,jdbcType=VARCHAR},
      backup1 = #{record.backup1,jdbcType=VARCHAR},
      backup2 = #{record.backup2,jdbcType=INTEGER},
      backup3 = #{record.backup3,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.web02.entity.Type" >
    update type
    <set >
      <if test="typename != null" >
        typename = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="backup1 != null" >
        backup1 = #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null" >
        backup2 = #{backup2,jdbcType=INTEGER},
      </if>
      <if test="backup3 != null" >
        backup3 = #{backup3,jdbcType=INTEGER},
      </if>
    </set>
    where typeid = #{typeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.web02.entity.Type" >
    update type
    set typename = #{typename,jdbcType=VARCHAR},
      backup1 = #{backup1,jdbcType=VARCHAR},
      backup2 = #{backup2,jdbcType=INTEGER},
      backup3 = #{backup3,jdbcType=INTEGER}
    where typeid = #{typeid,jdbcType=INTEGER}
  </update>
</mapper>