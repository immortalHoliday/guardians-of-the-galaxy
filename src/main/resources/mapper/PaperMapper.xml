<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.web02.dao.PaperMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.web02.entity.Paper" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="teacherid" property="teacherid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="papertime" property="papertime" jdbcType="TIMESTAMP" />
    <result column="counttime" property="counttime" jdbcType="INTEGER" />
    <result column="totalscore" property="totalscore" jdbcType="DECIMAL" />
    <result column="deleteflag" property="deleteflag" jdbcType="INTEGER" />
    <result column="folderid" property="folderid" jdbcType="INTEGER" />
    <result column="backup1" property="backup1" jdbcType="VARCHAR" />
    <result column="backup2" property="backup2" jdbcType="INTEGER" />
    <result column="backup3" property="backup3" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, description, teacherid, state, papertime, counttime, totalscore, deleteflag, 
    folderid, backup1, backup2, backup3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.web02.entity.PaperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from paper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from paper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.web02.entity.PaperExample" >
    delete from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.web02.entity.Paper" >
    insert into paper (id, description, teacherid, 
      state, papertime, counttime, 
      totalscore, deleteflag, folderid, 
      backup1, backup2, backup3
      )
    values (#{id,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{teacherid,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{papertime,jdbcType=TIMESTAMP}, #{counttime,jdbcType=INTEGER}, 
      #{totalscore,jdbcType=DECIMAL}, #{deleteflag,jdbcType=INTEGER}, #{folderid,jdbcType=INTEGER}, 
      #{backup1,jdbcType=VARCHAR}, #{backup2,jdbcType=INTEGER}, #{backup3,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.web02.entity.Paper" >
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="teacherid != null" >
        teacherid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="papertime != null" >
        papertime,
      </if>
      <if test="counttime != null" >
        counttime,
      </if>
      <if test="totalscore != null" >
        totalscore,
      </if>
      <if test="deleteflag != null" >
        deleteflag,
      </if>
      <if test="folderid != null" >
        folderid,
      </if>
      <if test="backup1 != null" >
        backup1,
      </if>
      <if test="backup2 != null" >
        backup2,
      </if>
      <if test="backup3 != null" >
        backup3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="papertime != null" >
        #{papertime,jdbcType=TIMESTAMP},
      </if>
      <if test="counttime != null" >
        #{counttime,jdbcType=INTEGER},
      </if>
      <if test="totalscore != null" >
        #{totalscore,jdbcType=DECIMAL},
      </if>
      <if test="deleteflag != null" >
        #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="folderid != null" >
        #{folderid,jdbcType=INTEGER},
      </if>
      <if test="backup1 != null" >
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null" >
        #{backup2,jdbcType=INTEGER},
      </if>
      <if test="backup3 != null" >
        #{backup3,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.web02.entity.PaperExample" resultType="java.lang.Integer" >
    select count(*) from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update paper
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherid != null" >
        teacherid = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.papertime != null" >
        papertime = #{record.papertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.counttime != null" >
        counttime = #{record.counttime,jdbcType=INTEGER},
      </if>
      <if test="record.totalscore != null" >
        totalscore = #{record.totalscore,jdbcType=DECIMAL},
      </if>
      <if test="record.deleteflag != null" >
        deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      </if>
      <if test="record.folderid != null" >
        folderid = #{record.folderid,jdbcType=INTEGER},
      </if>
      <if test="record.backup1 != null" >
        backup1 = #{record.backup1,jdbcType=VARCHAR},
      </if>
      <if test="record.backup2 != null" >
        backup2 = #{record.backup2,jdbcType=INTEGER},
      </if>
      <if test="record.backup3 != null" >
        backup3 = #{record.backup3,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update paper
    set id = #{record.id,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      teacherid = #{record.teacherid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      papertime = #{record.papertime,jdbcType=TIMESTAMP},
      counttime = #{record.counttime,jdbcType=INTEGER},
      totalscore = #{record.totalscore,jdbcType=DECIMAL},
      deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      folderid = #{record.folderid,jdbcType=INTEGER},
      backup1 = #{record.backup1,jdbcType=VARCHAR},
      backup2 = #{record.backup2,jdbcType=INTEGER},
      backup3 = #{record.backup3,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.web02.entity.Paper" >
    update paper
    <set >
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        teacherid = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="papertime != null" >
        papertime = #{papertime,jdbcType=TIMESTAMP},
      </if>
      <if test="counttime != null" >
        counttime = #{counttime,jdbcType=INTEGER},
      </if>
      <if test="totalscore != null" >
        totalscore = #{totalscore,jdbcType=DECIMAL},
      </if>
      <if test="deleteflag != null" >
        deleteflag = #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="folderid != null" >
        folderid = #{folderid,jdbcType=INTEGER},
      </if>
      <if test="backup1 != null" >
        backup1 = #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null" >
        backup2 = #{backup2,jdbcType=INTEGER},
      </if>
      <if test="backup3 != null" >
        backup3 = #{backup3,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.web02.entity.Paper" >
    update paper
    set description = #{description,jdbcType=VARCHAR},
      teacherid = #{teacherid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      papertime = #{papertime,jdbcType=TIMESTAMP},
      counttime = #{counttime,jdbcType=INTEGER},
      totalscore = #{totalscore,jdbcType=DECIMAL},
      deleteflag = #{deleteflag,jdbcType=INTEGER},
      folderid = #{folderid,jdbcType=INTEGER},
      backup1 = #{backup1,jdbcType=VARCHAR},
      backup2 = #{backup2,jdbcType=INTEGER},
      backup3 = #{backup3,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>