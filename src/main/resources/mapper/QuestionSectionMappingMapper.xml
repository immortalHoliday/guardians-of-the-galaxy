<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.web02.dao.QuestionSectionMappingMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.web02.entity.QuestionSectionMapping" >
    <id column="questionid" property="questionid" jdbcType="INTEGER" />
    <id column="sectionid" property="sectionid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="label" property="label" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DECIMAL" />
    <result column="backup1" property="backup1" jdbcType="VARCHAR" />
    <result column="backup2" property="backup2" jdbcType="INTEGER" />
    <result column="backup3" property="backup3" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    questionid, sectionid, type, label, score, backup1, backup2, backup3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.web02.entity.QuestionSectionMappingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from questionsectionmapping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.neuedu.web02.entity.QuestionSectionMappingKey" >
    select 
    <include refid="Base_Column_List" />
    from questionsectionmapping
    where questionid = #{questionid,jdbcType=INTEGER}
      and sectionid = #{sectionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.neuedu.web02.entity.QuestionSectionMappingKey" >
    delete from questionsectionmapping
    where questionid = #{questionid,jdbcType=INTEGER}
      and sectionid = #{sectionid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.web02.entity.QuestionSectionMappingExample" >
    delete from questionsectionmapping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.web02.entity.QuestionSectionMapping" >
    insert into questionsectionmapping (questionid, sectionid, type, 
      label, score, backup1, 
      backup2, backup3)
    values (#{questionid,jdbcType=INTEGER}, #{sectionid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{label,jdbcType=VARCHAR}, #{score,jdbcType=DECIMAL}, #{backup1,jdbcType=VARCHAR}, 
      #{backup2,jdbcType=INTEGER}, #{backup3,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.web02.entity.QuestionSectionMapping" >
    insert into questionsectionmapping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionid != null" >
        questionid,
      </if>
      <if test="sectionid != null" >
        sectionid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="label != null" >
        label,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="backup1 != null" >
        backup1,
      </if>
      <if test="backup2 != null" >
        backup2,
      </if>
      <if test="backup3 != null" >
        backup3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionid != null" >
        #{questionid,jdbcType=INTEGER},
      </if>
      <if test="sectionid != null" >
        #{sectionid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="backup1 != null" >
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null" >
        #{backup2,jdbcType=INTEGER},
      </if>
      <if test="backup3 != null" >
        #{backup3,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.web02.entity.QuestionSectionMappingExample" resultType="java.lang.Integer" >
    select count(*) from questionsectionmapping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update questionsectionmapping
    <set >
      <if test="record.questionid != null" >
        questionid = #{record.questionid,jdbcType=INTEGER},
      </if>
      <if test="record.sectionid != null" >
        sectionid = #{record.sectionid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null" >
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.backup1 != null" >
        backup1 = #{record.backup1,jdbcType=VARCHAR},
      </if>
      <if test="record.backup2 != null" >
        backup2 = #{record.backup2,jdbcType=INTEGER},
      </if>
      <if test="record.backup3 != null" >
        backup3 = #{record.backup3,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update questionsectionmapping
    set questionid = #{record.questionid,jdbcType=INTEGER},
      sectionid = #{record.sectionid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DECIMAL},
      backup1 = #{record.backup1,jdbcType=VARCHAR},
      backup2 = #{record.backup2,jdbcType=INTEGER},
      backup3 = #{record.backup3,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.web02.entity.QuestionSectionMapping" >
    update questionsectionmapping
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="backup1 != null" >
        backup1 = #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null" >
        backup2 = #{backup2,jdbcType=INTEGER},
      </if>
      <if test="backup3 != null" >
        backup3 = #{backup3,jdbcType=INTEGER},
      </if>
    </set>
    where questionid = #{questionid,jdbcType=INTEGER}
      and sectionid = #{sectionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.web02.entity.QuestionSectionMapping" >
    update questionsectionmapping
    set type = #{type,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      score = #{score,jdbcType=DECIMAL},
      backup1 = #{backup1,jdbcType=VARCHAR},
      backup2 = #{backup2,jdbcType=INTEGER},
      backup3 = #{backup3,jdbcType=INTEGER}
    where questionid = #{questionid,jdbcType=INTEGER}
      and sectionid = #{sectionid,jdbcType=INTEGER}
  </update>
</mapper>