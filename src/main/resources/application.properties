#springboot的总体配置文件
#因为这次是打包成war包，tomcat服务器不再指定端口
#在部署前去掉就好
server.port=8088

#编码格式 ,解决前台到后台的中文乱码问题
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8


####################################################
# 指定将项目中所有的静态资源配置在static下面   静态资源  css  ;  js  ;img  
####################################################
# 过滤http的url中包含 /static/** 之后接任意字符,当是这种形式时,表示要寻找静态资源,那么...
spring.mvc.static-path-pattern=/static/**
# 则将该url引导到以下的服务器路径下去寻找静态资源
spring.resources.static-locations=classpath:/static/
# 网页中引入静态资源需要使用模板语法  th:href="@{static/css/style1.css}"
# 或者th:src="@{static/js/jquery-1.8.3.min.js}"
# 或者<img alt="" src="img/box.png" th:src="@{static/img/box.png}">
# 这样做的好处在于 ,即使是静态页面也能显示出好看的效果 ,而切换到springboot框架里 ,部署到服务器上,就用后面的th:*** ,代替之前的静态资源了

#数据库配置
#这段设置如果不加的话会报错，所以我将我的设置写到了这里
#此处之后改为各位数据的设置
spring.datasource.url=jdbc:mysql://localhost:3306/web614?useUnicode=true&characterEncoding=utf8&useSSL=true
spring.datasource.username=root
spring.datasource.password=bt7145810
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

logging.level.com.neuedu.web02.dao=debug


#设置页面模板的属性
spring.thymeleaf.prefix=classpath:/static/
#后缀
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false

#mybatis配置短语和映射文件
#指定bean所在包 ,定义短语
mybatis.type-aliases-package=com.neuedu.web02.entity
#指定映射文件的路径 ,boot会扫描该文件夹 ,将所有的mapper文件生成bean对象,注册的springboot中
mybatis.mapperLocations=classpath:mapper/*.xml